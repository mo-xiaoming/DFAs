import re
from lib.regex import match
import pytest


@pytest.mark.parametrize(
    "p, s",
    [
        ("", ""),
        ("", "a"),
        ("", "ab"),
        ("a", "a"),
        ("a", "b"),
        ("a", "ab"),
        ("aa", "aa"),
        ("aa", "ab"),
        ("ab", "ab"),
        ("ab", "a"),
        ("ab", "b"),
        ("abc", "abc"),
        (".", ""),
        (".", "a"),
        (".", "ab"),
        (".", "."),
        ("a.", "ab"),
        ("a.", "a"),
        ("a.", "b"),
        ("a.", "abc"),
        (".a", "ab"),
        (".a", "a"),
        (".a", "ba"),
        (".a", "bac"),
        ("a.b", "acb"),
        ("a.b", "aab"),
        ("a.b", "abb"),
        ("a.b", ""),
        ("a.b", "a"),
        ("a.b", "f"),
        ("a.b", "ab"),
        ("a.b", "bbb"),
        ("a.b", "abbb"),
        (".a.b", "abbb"),
        (".a.b", "babb"),
        (".a.b", "babbc"),
        ("..", ""),
        ("..", "a"),
        ("..", "ab"),
        ("..", "abc"),
        (".a.", "abc"),
        (".a.", "bac"),
        ("a|b", "a"),
        ("a|b", "b"),
        ("a|b", "c"),
        ("a|b", ""),
        ("a|b|c", "a"),
        ("a|b|c", "b"),
        ("a|b|c", "c"),
        ("a|b|c", ""),
        ("a|b|c", "d"),
        ("b?", ""),
        ("b?", "b"),
        ("b?", "ba"),
        ("b?", "a"),
        ("b?", "bb"),
        ("b?", "bbb"),
        ("ab?", "abbb"),
        ("ab?", "ab"),
        ("ab?aa?", "aba"),
        ("ab?aa?", "abaa"),
        ("ab?aa?", "abaaa"),
        ("a??", "a"),
        ("a??", ""),
        (".?", ""),
        (".?", "a"),
        (".?", "b"),
        (".?", "ab"),
        ("ab|c", "ab"),
        ("ab|c", "ac"),
        ("ab|c", "abc"),
        ("ab|cd", "cd"),
        ("ab|.d", "xd"),
        ("b*", ""),
        ("b*", "b"),
        ("b*", "bb"),
        ("b*", "bbb"),
        ("ab*", "a"),
        ("ab*", "ab"),
        ("ab*", "abb"),
        ("ab*", "abbb"),
        ("a*", "b"),
        ("a*", "bb"),
        (".*a*", ""),
        (".*a*", "a"),
        (".*a*", "aa"),
        (".*abc", "dddabc"),
        ("a*a*", ""),
        ("a*a*", "a"),
        ("a*a*", "aa"),
        ("a*a*", "aaa"),
        ("a*a*", "aaaa"),
        ("a*b*", "aaaa"),
        ("a*b*", "aaab"),
        ("a*b*", "aabb"),
        ("a*b*", "abbb"),
        ("a*b*", "bbbb"),
        ("a*b*", "ab"),
        ("a*b*", "a"),
        ("a*b*", "b"),
        ("a.*.*b", "a"),
        ("a.*.*b", "b"),
        ("a.*.*b", "ab"),
        ("a.*.*b", "acb"),
        ("a.*.*b", "accb"),
        ("a.*c.*b", "accb"),
        ("c*?", ""),
        ("c*?", "c"),
        ("c*?", "cc"),
        ("c*?", "ccc"),
        ("b+", ""),
        ("b+", "a"),
        ("b+", "b"),
        ("b+", "bb"),
        ("b+", "bbb"),
        ("a+", "ba"),
        ("a+", "aab"),
        ("ab+", "abbb"),
        ("ab+", "ab"),
        ("aa+", "a"),
        ("aa+", "aa"),
        ("aa+", "aaa"),
        ("aa+", "ab"),
        ("b.*|a+", ""),
        ("b.*|a+", "a"),
        ("b.*|a+", "aa"),
        ("b.*|a+", "b"),
        ("b.*|a+", "bb"),
        ("cded|a+", "cded"),
        ("cded|a+", "cdeda"),
        ("cded|a+", "a"),
        ("cded|a+", ""),
        ("cded|ba+", "ba"),
        ("a(bcd|efg)h", "abcdh"),
        ("a(bcd|efg)h", "efgh"),
        ("a(bcd|efg)h", "abefgh"),
        ("a(bcd|efg)h", "abefg"),
        ("bca(bcd|efg)h", "bcaefgh"),
        ("bca(bcd|efg)h", "bcabcdh"),
        ("bca(bcd|efg)hca", "bcabcdhca"),
        ("(bcd|efg)", "bcd"),
        ("(bcd|efg)", "efg"),
        ("(bcd|efg)?", "efg"),
        ("(bcd|efg)?", "bcd"),
        ("(bcd|efg)?", ""),
        ("a(b(c|d)e)f", "abcef"),
        ("a(b(c|d)e)f", "abdef"),
        ("a(b(c|d)e)f", "a"),
        ("a(b(c|d)e)f", "abf"),
        ("a(b(c|d)e)f", "abcef"),
        ("a(b(c|d)e)f", "abdef"),
        ("a(b(c|d)e)f", "abceef"),
        ("a(b(c|d)e)f", "abdeef"),
        ("a(b(c|d)e)f", "abceef"),
        ("a(b(c|d)e)f", "abdeef"),
        ("a(b|c)*d", "ad"),
        ("a(b|c)*d", "abd"),
        ("a(b|c)*d", "acd"),
        ("a(b|c)*d", "abbd"),
        ("a(b|c)*d", "accd"),
        ("a(b|c)*d", "abbbd"),
        ("a(b|c)*d", "acccd"),
        ("a(b|c)*d", "abbbbd"),
        ("a(b|c)*d", "abbbbd"),
        ("a(b|c)*d", "a"),
        ("a(b|c)*d", "ad"),
        ("a(b|c)*d", "ab"),
        ("a(b|c)*d", "ac"),
        ("a(b|c)*d", "abcd"),
        ("a(b|c)*d", "abbb"),
        ("a(b|c)*d", "acccd"),
        ("(a.(b|d))*", ""),
        ("(a.(b|d))*", "a"),
        ("(a.(b|d))*", "ab"),
        ("(a.(b|d))*", "adc"),
        ("(a.(b|d))*", "abb"),
        ("(a.(b|d))*", "abd"),
        ("(a.(b|d))*", "abdadd"),
        ("(a.(b|d))*", "abdaddabb"),
    ],
)
def test_basic_regex(p, s):
    assert match(p, s) == bool(re.fullmatch(p, s)), f"p={p}, s={s}"
